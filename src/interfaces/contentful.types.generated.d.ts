// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from 'contentful';
import { Document } from '@contentful/rich-text-types';

export interface IAuthorFields {
  /** First Name */
  firstName: string;

  /** Last Name */
  lastName: string;

  /** Location */
  location?: string | undefined;

  /** Avatar */
  avatar?: Asset | undefined;
}

/** Author can be used in testimonials, blog posts, etc. */

export interface IAuthor extends Entry<IAuthorFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'author';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IAwardsTrustpilotSectionFields {
  /** Title */
  title: string;

  /** Awards List */
  awardsList?: string[] | undefined;

  /** Call to Action */
  callToAction?: INavigationLink | undefined;

  /** Trust Score */
  trustScore: number;

  /** Trustpilot reviews */
  trustpilotReviews: number;
}

/** Section contains awards and trustpilot rating.  */

export interface IAwardsTrustpilotSection extends Entry<IAwardsTrustpilotSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'awardsTrustpilotSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBannerFields {
  /** Title */
  title: string;

  /** Title Variant */
  titleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | undefined;

  /** Variant */
  variant?: 'primary' | 'secondary' | 'centered' | 'partner_logo' | undefined;

  /** Body */
  body?: Document | undefined;

  /** Icon */
  icon?: Asset | undefined;

  /** CTA */
  cta?: INavigationLink | undefined;

  /** No Title? */
  noTitle?: boolean | undefined;

  /** Full Width */
  fullWidth?: boolean | undefined;

  /** Image Padding */
  padding?: string | undefined;
}

export interface IBanner extends Entry<IBannerFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'banner';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitFields {
  /** Title */
  title?: string | undefined;

  /** Logo */
  logo: Asset;

  /** Features */
  features?: IBenefitFeature[] | undefined;

  /** Label */
  label?: string | undefined;

  /** Disclaimer */
  disclaimer?: string | undefined;

  /** HeaderImage */
  headerImage: Asset;

  /** CTA */
  cta?: IBanner | undefined;

  /** Content */
  content?:
    | (IBenefitChargerComparisonTable | IBenefitContent3ColumnImagesWithText | IFaqSection)[]
    | undefined;

  /** Access Benefit Type */
  accessBenefitType: 'Link + Title' | 'Link + Title + Contact Details' | 'Appstore Links';

  /** Access Benefit Steps */
  accessBenefitSteps: string[];

  /** Access Benefit Title */
  accessBenefitTitle?: string | undefined;

  /** AppStore Link */
  appStoreLink?: string | undefined;

  /** Play Store Link */
  playStoreLink?: string | undefined;

  /** Contact Phone */
  contactPhone?: string | undefined;

  /** Contact Email */
  contactEmail?: string | undefined;

  /** AccessBenefitButton */
  accessBenefitButton?: INavigationLink | undefined;

  /** Is PlugSurfing Benefit */
  isPlugsurfingBenefit: boolean;

  /** Override Benefit Code */
  overrideBenefitCode?: string | undefined;
}

/** Benefit Item */

export interface IBenefit extends Entry<IBenefitFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefit';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitChargerComparisonTableFields {
  /** Title */
  title: string;

  /** Options */
  options: IBenefitChargerComparisonTableOption[];

  /** Shown On */
  shownOn?: 'Both' | 'Pre Purchase' | 'Post Purchase' | undefined;
}

export interface IBenefitChargerComparisonTable
  extends Entry<IBenefitChargerComparisonTableFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitChargerComparisonTable';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitChargerComparisonTableOptionFields {
  /** Title */
  title: string;

  /** Benefit */
  benefit: IBenefit;

  /** Main Benefit */
  mainBenefit: string;

  /** Starting Price */
  startingPrice: string;

  /** Key Features */
  keyFeatures: string;

  /** Speed */
  speed: string;

  /** Typical Installation Time */
  typicalInstallationTime: string;

  /** Warranty */
  warranty: string;

  /** Payment Plan */
  paymentPlan: string;

  /** Tethered (with cable) Option */
  tetheredWithCableOption: string;

  /** isMostPopular */
  isMostPopular: boolean;
}

export interface IBenefitChargerComparisonTableOption
  extends Entry<IBenefitChargerComparisonTableOptionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitChargerComparisonTableOption';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitContent3ColumnImagesWithTextFields {
  /** Title */
  title: string;

  /** Type */
  type:
    | '3 Column Images'
    | 'Video'
    | 'Works well with'
    | 'CTA'
    | 'Contact And Help'
    | 'Testimonials'
    | 'Image Grid and Features Section';

  /** Description */
  description?: Document | undefined;

  /** Item 1 Image */
  item1Image?: Asset | undefined;

  /** Item 1 Content */
  item1Content?: Document | undefined;

  /** Item 2 Image */
  item2Image?: Asset | undefined;

  /** Item 2 Content */
  item2Content?: Document | undefined;

  /** Item 3 Image */
  item3Image?: Asset | undefined;

  /** Item 3 Content */
  item3Content?: Document | undefined;

  /** Video */
  video?: Asset | undefined;

  /** Benefits */
  benefits?: IBenefit[] | undefined;

  /** Button */
  cta?: INavigationLink | undefined;

  /** ContactCards */
  contactCards?: IContactDetailsAndOpeningHours[] | undefined;

  /** Testimonials */
  testimonials?: ITestimonial[] | undefined;

  /** Images */
  images?: Asset[] | undefined;

  /** Main Features */
  mainFeatures?: IBenefitFeature[] | undefined;

  /** Features */
  features?: IBenefitFeature[] | undefined;

  /** Disclaimer */
  disclaimer?: string | undefined;

  /** Shown On */
  shownOn: 'Post Purchase' | 'Pre Purchase' | 'Both';

  /** Works well with items */
  worksWellWithItems?: IBenefitWorksWellWith[] | undefined;
}

export interface IBenefitContent3ColumnImagesWithText
  extends Entry<IBenefitContent3ColumnImagesWithTextFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitContent3ColumnImagesWithText';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitFeatureFields {
  /** Title */
  title: string;

  /** Short description */
  shortDescription: string;

  /** description */
  description?: string | undefined;

  /** longTitle */
  longTitle?: string | undefined;
}

export interface IBenefitFeature extends Entry<IBenefitFeatureFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitFeature';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitGroupFields {
  /** Title */
  title: string;

  /** Benefits & Cards */
  benefits?: (IBenefit | IBenefitGroupTips | IBlogPost)[] | undefined;

  /** Overview */
  overview: Document;

  /** Additional Info Title */
  additionalInfoTitle?: string | undefined;

  /** AdditionalInfoComponent */
  additionalInfoComponent?: IBenefitChargerComparisonTable | undefined;
}

/** Group for specific benefits */

export interface IBenefitGroup extends Entry<IBenefitGroupFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitGroup';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitGroupsSectionFields {
  /** Title */
  title?: string | undefined;

  /** Groups */
  groups: IBenefitGroup[];

  /** Type */
  type: 'ZoomEv Bundle' | 'Partner Bundle';

  /** Partner Logo */
  partnerLogo?: Asset | undefined;

  /** Sticky CTA Link */
  stickyCtaLink?: INavigationLink | undefined;

  /** Partner - Title */
  partnerTitle?: string | undefined;

  /** Partner - Price Text */
  partnerPriceText?: string | undefined;

  /** Display Title */
  displayTitle?: string | undefined;
}

export interface IBenefitGroupsSection extends Entry<IBenefitGroupsSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitGroupsSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitGroupTipsFields {
  /** Title */
  title?: string | undefined;

  /** Tips */
  tips: string[];
}

export interface IBenefitGroupTips extends Entry<IBenefitGroupTipsFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitGroupTips';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitsSectionFields {
  /** Title */
  title: string;

  /** Subtitle */
  subtitle?: string | undefined;

  /** Categories */
  categories: (IBenefitsSectionCategory | ICallToActionSection)[];

  /** Banner */
  banner?: IBanner | undefined;
}

/** Section to show ZoomEv benefits. */

export interface IBenefitsSection extends Entry<IBenefitsSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitsSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitsSectionCategoryFields {
  /** Category name */
  categoryName: string;

  /** Description */
  description: Document;

  /** Category subsections */
  categorySubsections: IBenefitsSubsection[];
}

/** Categories in benefits section. */

export interface IBenefitsSectionCategory extends Entry<IBenefitsSectionCategoryFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitsSectionCategory';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitsSubsectionFields {
  /** Title */
  title: string;

  /** Description */
  description: Document;

  /** Benefits */
  benefits: ITimelineItem[];

  /** Logo */
  logo: Asset;

  /** Image */
  image: Asset;
}

/** Single subsection in benefits section */

export interface IBenefitsSubsection extends Entry<IBenefitsSubsectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitsSubsection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBenefitWorksWellWithFields {
  /** Title */
  title: string;

  /** Description */
  description: string;

  /** Benefit */
  benefit: IBenefit;
}

export interface IBenefitWorksWellWith extends Entry<IBenefitWorksWellWithFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'benefitWorksWellWith';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBlogPostFields {
  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Description */
  description?: string | undefined;

  /** Author */
  author: IAuthor;

  /** Thumbnail */
  thumbnail: Asset;

  /** Body */
  body: Document;

  /** Tags */
  tags?: IBlogPostTag[] | undefined;

  /** Recommended Other Posts */
  recommendedOtherPosts?: IBlogPost[] | undefined;
}

/** Enitity which represents single post in blog section in the app */

export interface IBlogPost extends Entry<IBlogPostFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'blogPost';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBlogPostTagFields {
  /** Label */
  label: string;
}

export interface IBlogPostTag extends Entry<IBlogPostTagFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'blogPostTag';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IBundleDiscountPriceCardFields {
  /** Title */
  title: string;

  /** Title Color */
  titleColor?: string | undefined;

  /** Title Alignment */
  titleAlignment?: 'center' | 'left' | 'right' | undefined;

  /** Subtitle */
  subtitle?: string | undefined;

  /** Type */
  type?: 'Employee' | 'Other' | 'Subscription' | undefined;

  /** No Title? */
  noTitle?: boolean | undefined;

  /** Title Variant */
  titleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | undefined;

  /** Bundle Price */
  bundlePrice?: string | undefined;

  /** Body */
  body?: Document | undefined;

  /** Horizontal List */
  horizontalList?: boolean | undefined;

  /** CTA */
  cta?: INavigationLink | undefined;

  /** Image */
  image?: Asset | undefined;

  /** Image / Title Position */
  imagePosition?: 'overlay' | 'top' | 'left' | undefined;

  /** Sub Cards */
  subCards?: ICard[] | undefined;

  /** Height */
  height?: string | undefined;

  /** Width */
  width?: string | undefined;

  /** Show dot icon */
  showDotIcon?: boolean | undefined;

  /** Banner */
  banner?: IBanner | undefined;

  /** Additional Content Vertical Alignment */
  additionalContentVerticalAlignment?: 'between' | 'center' | 'top' | undefined;

  /** Show borders */
  showBorders?: boolean | undefined;

  /** Margin */
  margin?: string | undefined;
}

/** Bundle discount price card which shows the discounted price. */

export interface IBundleDiscountPriceCard extends Entry<IBundleDiscountPriceCardFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'bundleDiscountPriceCard';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ICalculatorSectionFields {
  /** Title */
  title?: string | undefined;

  /** Type */
  type: 'Savings - Advanced' | 'Savings - Compact';

  /** Mileage per year */
  mileagePerYear?: string | undefined;

  /** Default Mileage Per Year */
  defaultMileagePerYear?: number | undefined;

  /** EV Range */
  evRange?: string | undefined;

  /** Default EV Range */
  defaultEvRange?: number | undefined;

  /** Battery Size */
  batterySize?: string | undefined;

  /** Default Battery Size */
  defaultBatterySize?: number | undefined;

  /** Tariffs */
  tariffs?: string[] | undefined;

  /** Public Parking rate per day */
  publicParkingPerDay?: number | undefined;

  /** Parking Discount */
  parkingDiscount?: number | undefined;

  /** Osprey Discount */
  ospreyDiscount?: number | undefined;

  /** Home Energy Discount */
  bpHomeCharger?: number | undefined;

  /** SSE Free Miles */
  sseFreeMiles?: number | undefined;

  /** Plugsurfing rate */
  plugsurfingRate?: number | undefined;

  /** Rapid Charging Discount */
  rapidChargingDiscount?: number | undefined;

  /** Charger Price */
  chargerPrice?: number | undefined;

  /** Max hiring frequency */
  maxHiringFrequency?: number | undefined;

  /** Default hiring frequency */
  defaultHiringFrequency?: number | undefined;

  /** Discounted off price */
  discountedOffPrice?: IKeyValueItem[] | undefined;

  /** Default car age */
  defaultCarAge?: IKeyValueItem | undefined;

  /** Rent pricing */
  rentPricing?: IKeyValueItem[] | undefined;

  /** Default rent pricing */
  defaultRentPricing?: IKeyValueItem | undefined;

  /** Car Age Tooltip */
  carAgeTooltip?: string | undefined;

  /** Car Value Tooltip */
  carValueTooltip?: string | undefined;

  /** Home Charging Credits */
  homeChargingCredits?: number | undefined;

  /** Popup Title */
  popupTitle?: string | undefined;

  /** Popup Content */
  popupContent?: Document | undefined;

  /** publicChargingHelpText */
  publicChargingHelpText?: string | undefined;

  /** homeChargingHelpText */
  homeChargingHelpText?: string | undefined;

  /** chargerSharingHelpText */
  chargerSharingHelpText?: string | undefined;

  /** homeEnergySavingsHelpText */
  homeEnergySavingsHelpText?: string | undefined;

  /** evParkingHelpText */
  evParkingHelpText?: string | undefined;

  /** Delta Value */
  deltaValue: number;

  /** Delta Discount */
  deltaDiscount: number;

  /** Recharge Rescue Amount */
  rechargeRescueAmount: number;

  /** Recharge Rescue Discount */
  rechargeRescueDiscount: number;

  /** Autoserve Policy Amount */
  autoservePolicyAmount: number;

  /** Autoserve Retail Amount */
  autoserveRetailAmount: number;

  /** Autoserve Discount */
  autoserveDiscount: number;
}

/** Section that contains different types of calculators. */

export interface ICalculatorSection extends Entry<ICalculatorSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'calculatorSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ICallToActionSectionFields {
  /** Title */
  title: string;

  /** Text */
  text?: Document | undefined;

  /** CTA Button */
  ctaButton?: INavigationLink | undefined;

  /** CTA Button #2 */
  ctaButton2?: INavigationLink | undefined;

  /** Background */
  background?: string | undefined;

  /** Padding */
  padding?: string | undefined;

  /** Width */
  width?: string | undefined;

  /** Banner */
  banner?: IBanner | undefined;
}

export interface ICallToActionSection extends Entry<ICallToActionSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'callToActionSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ICardFields {
  /** Title */
  title: string;

  /** Title Color */
  titleColor?: string | undefined;

  /** Title Alignment */
  titleAlignment?: 'center' | 'left' | 'right' | undefined;

  /** Subtitle */
  subtitle?: string | undefined;

  /** Type */
  type?: 'Employee' | 'Other' | 'Subscription' | undefined;

  /** No Title? */
  noTitle?: boolean | undefined;

  /** Title Variant */
  titleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | undefined;

  /** Body */
  body?: Document | undefined;

  /** Horizontal List */
  horizontalList?: boolean | undefined;

  /** CTA */
  cta?: INavigationLink | undefined;

  /** Image */
  image?: Asset | undefined;

  /** Image / Title Position */
  imagePosition?: 'overlay' | 'top' | 'left' | undefined;

  /** Sub Cards */
  subCards?: ICard[] | undefined;

  /** Height */
  height?: string | undefined;

  /** Width */
  width?: string | undefined;

  /** Show dot icon */
  showDotIcon?: boolean | undefined;

  /** Banner */
  banner?: IBanner | undefined;

  /** Additional Content Vertical Alignment */
  additionalContentVerticalAlignment?: 'between' | 'center' | 'top' | undefined;

  /** Show borders */
  showBorders?: boolean | undefined;

  /** Margin */
  margin?: string | undefined;
}

/** Card layout which can be used in 'Cards Subsection'. Ex. Bundle with description. */

export interface ICard extends Entry<ICardFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'card';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IColumnSectionFields {
  /** Title */
  title?: string | undefined;

  /** Title Variant */
  titleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | undefined;

  /** Show title? */
  showTitle?: boolean | undefined;

  /** Superscript Title */
  superscriptTitle?: string | undefined;

  /** Description */
  description?: Document | undefined;

  /** Text Alignment */
  textAlignment?: 'center' | 'left' | 'right' | undefined;

  /** Text Width */
  textWidth?: string | undefined;

  /** Additional Content */
  additionalContent?: ICalculatorSection | ICustomSection | undefined;

  /** Additional Content Horizontal Alignment */
  additionalContentHorizontalAlignment?: 'start' | 'center' | undefined;

  /** Additional Content Vertical Alignment */
  additionalContentVerticalAlignment?: 'top' | 'center' | undefined;

  /** Additional Content Placement */
  additionalContentPlacement?: 'top' | 'bottom' | 'left' | 'right' | undefined;

  /** Additional Cards */
  additionalCards?: ICard[] | undefined;

  /** Image */
  image?: Asset | undefined;

  /** Image Pattern */
  imagePattern?:
    | 'None'
    | 'Pattern #1'
    | 'Pattern #2'
    | 'Pattern #3'
    | 'Pattern #4'
    | 'Pattern #5'
    | undefined;

  /** Image Overlay */
  imageOverlay?: boolean | undefined;

  /** Image Transform */
  imageTransform?: string | undefined;

  /** Banners */
  banners?: IBanner[] | undefined;

  /** CTA */
  cta?: INavigationLink | undefined;

  /** CTA #2 */
  cta2?: INavigationLink | undefined;

  /** Background */
  background?: string | undefined;

  /** Cards */
  cards?: ICard[] | undefined;

  /** Cards Columns */
  cardsColumns?: number | undefined;

  /** List Title */
  listTitle?: string | undefined;

  /** List Items */
  listItems?: string[] | undefined;

  /** List Columns */
  listColumns?: number | undefined;

  /** Padding */
  padding?: string | undefined;

  /** Margin */
  margin?: string | undefined;

  /** Minimal Height */
  minimalHeight?: string | undefined;
}

/** Default section for adding content */

export interface IColumnSection extends Entry<IColumnSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'columnSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IContactDetailsAndOpeningHoursFields {
  /** Title */
  title: string;

  /** Phone */
  phone?: string | undefined;

  /** Email */
  email?: string | undefined;

  /** Hours Items */
  hoursItems?: string[] | undefined;
}

export interface IContactDetailsAndOpeningHours
  extends Entry<IContactDetailsAndOpeningHoursFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'contactDetailsAndOpeningHours';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ICustomSectionFields {
  /** Layout */
  layout:
    | 'Partners Carousel'
    | 'Testimonials'
    | '2 columns'
    | '3 columns'
    | 'Cards'
    | 'Multiple rows'
    | 'Timeline'
    | 'Cards & Partners'
    | 'Column & Partners list';

  /** Title */
  title: string;

  /** Title Variant */
  titleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | undefined;

  /** Title Position */
  titlePosition?: 'left' | 'center' | undefined;

  /** No Title? */
  noTitle?: boolean | undefined;

  /** Description */
  description?: Document | undefined;

  /** Primary image */
  primaryImage?: Asset | undefined;

  /** Image Pattern */
  imagePattern?: 'None' | 'Pattern #1' | 'Pattern #2' | 'Pattern #3' | undefined;

  /** Image placement */
  imagePlacement?: 'left' | 'right' | undefined;

  /** Image Overlay */
  imageOverlay?: boolean | undefined;

  /** Image Transform */
  imageTransform?: string | undefined;

  /** CTA Button */
  ctaButton?: INavigationLink | undefined;

  /** Columns */
  columns?: (IBlogPost | ICard | IColumnSection | ICustomSection | IFaq)[] | undefined;

  /** Bundle discount card */
  bundleDiscountCard?: IBundleDiscountPriceCard | undefined;

  /** Cards */
  cards?: ICard[] | undefined;

  /** Cards Columns */
  cardsColumns?: number | undefined;

  /** Partners logos */
  partnersLogos?: Asset[] | undefined;

  /** Testimonials */
  testimonials?: ITestimonial[] | undefined;

  /** Background */
  background?: string | undefined;

  /** Timeline items */
  timelineItems?: ITimelineItem[] | undefined;

  /** Timeline Direction */
  timelineDirection?: 'vertical' | 'horizontal' | undefined;

  /** Timeline Image */
  timelineImage?: Asset | undefined;

  /** Banner */
  banner?: IBanner | undefined;

  /** List Title */
  listTitle?: string | undefined;

  /** List Item */
  listItem?: string[] | undefined;

  /** Dots Patterns */
  dotsPatterns?: boolean | undefined;

  /** Padding */
  padding?: string | undefined;

  /** Margin */
  margin?: string | undefined;
}

/** Custom page section with prefine in code layout. */

export interface ICustomSection extends Entry<ICustomSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'customSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IEcologicalFootprintSectionFields {
  /** Title */
  title: string;

  /** Carbon Saved */
  carbonSaved: number;

  /** Trees Saved */
  treesSaved: number;

  /** Plastic Impact */
  plasticImpact: number;
}

export interface IEcologicalFootprintSection extends Entry<IEcologicalFootprintSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'ecologicalFootprintSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFaqFields {
  /** Question */
  question: string;

  /** URL Slug */
  urlSlug: string;

  /** Answer */
  answer: Document;

  /** Category */
  category: 'general' | 'renters' | 'owners';
}

/** Single frequently asked question */

export interface IFaq extends Entry<IFaqFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'faq';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFaqPageFields {
  /** Title */
  title: string;

  /** URL Slug */
  urlSlug: string;

  /** FAQ Tabs Section */
  faqTabsSection: ITabsSection;

  /** Banner */
  banner?: IBanner | undefined;
}

export interface IFaqPage extends Entry<IFaqPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'faqPage';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFaqSectionFields {
  /** Title */
  title: string;

  /** Questions */
  questions: IFaq[];

  /** Shown On */
  shownOn: 'Post Purchase' | 'Pre Purchase' | 'Both';

  /** Link underneath */
  linkUnderneath?: INavigationLink | undefined;
}

/** Single FAQ section. */

export interface IFaqSection extends Entry<IFaqSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'faqSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFooterSectionFields {
  /** Label */
  label: string;

  /** Links */
  links?: INavigationLink[] | undefined;
}

/** Main footer content section (eg. Company with link to 'about us' page) */

export interface IFooterSection extends Entry<IFooterSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'footerSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IGlobalSettingsFields {
  /** Settings name */
  settingsName?: string | undefined;

  /** Top Bar Logo */
  topBarLogo?: Asset | undefined;

  /** Top Bar CTA */
  topBarCta?: INavigationLink | undefined;

  /** Navigation */
  navigation?: INavigationLink[] | undefined;

  /** Social Links */
  socialLinks?: INavigationLink[] | undefined;

  /** Footer Top CTA */
  footerTopCta?: INavigationLink | undefined;

  /** Footer Sections */
  footerSections?: IFooterSection[] | undefined;

  /** Footer Bottom Links */
  footerBottomLinks?: INavigationLink[] | undefined;

  /** Blog Categories */
  blogCategories: IBlogPostTag[];

  /** Contact Form Topics */
  contactFormTopics: string[];
}

/** Global settings used by i.e. Landing page. */

export interface IGlobalSettings extends Entry<IGlobalSettingsFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'globalSettings';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IGoElectricSectionFields {
  /** Title */
  title?: string | undefined;

  /** Description */
  description: string;

  /** Carbon saved */
  carbonSaved?: number | undefined;

  /** Banner */
  banner?: IBanner | undefined;

  /** Background - not logged */
  backgroundNotLogged: Asset;

  /** Background - logged */
  backgroundLogged: Asset;
}

/** Section contains go electric, cars you may like, recently rented evs */

export interface IGoElectricSection extends Entry<IGoElectricSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'goElectricSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IInstructionFields {
  /** Title */
  title: string;

  /** Description */
  description: Document;

  /** Type */
  type: 'Business' | 'Peer-to-peer' | 'Business or Peer-to-peer' | 'Help';
}

/** Model contains single instruction for example Guest Steps (for Peer-to-Peer Vehicle). */

export interface IInstruction extends Entry<IInstructionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'instruction';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IInstructionsSectionFields {
  /** Section Name */
  sectionName: string;

  /** For */
  for: 'Guest' | 'Host';

  /** Sections */
  sections: IInstruction[];
}

/** Sections contain instructions like pick up steps, drop off steps etc. */

export interface IInstructionsSection extends Entry<IInstructionsSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'instructionsSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IKeyValueItemFields {
  /** Key */
  key: string;

  /** Value */
  value: string;
}

/** Available in calculator component */

export interface IKeyValueItem extends Entry<IKeyValueItemFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'keyValueItem';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface INavigationLinkFields {
  /** Label */
  label: string;

  /** Linked Entry */
  linkedEntry?: IBlogPost | IFaqPage | IFaq | IPage | undefined;

  /** Custom URL */
  customUrl?: string | undefined;

  /** Image */
  image?: Asset | undefined;

  /** Text */
  text?: string | undefined;

  /** Button Variant */
  buttonVariant?: 'contained' | 'outlined' | 'link' | 'text' | 'text_blue' | undefined;

  /** Show Arrow */
  showArrow?: boolean | undefined;

  /** margin */
  margin?: string | undefined;

  /** Dropdown Items */
  dropdownItems?: INavigationLink[] | undefined;

  /** Analytics Data */
  analyticsData?: Record<string, any> | undefined;
}

/** Link used in other resources for CTA links/buttons or another forms of navigations */

export interface INavigationLink extends Entry<INavigationLinkFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'navigationLink';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IPageFields {
  /** Title */
  title: string;

  /** URL Slug */
  urlSlug: string;

  /** Type */
  type?: 'Blog' | 'Contact' | undefined;

  /** Content Sections */
  contentSections?:
    | (
        | IThreeColumnImageFeature
        | IAwardsTrustpilotSection
        | IBanner
        | IBenefitGroupsSection
        | IBenefitsSection
        | ICalculatorSection
        | ICallToActionSection
        | IColumnSection
        | ICustomSection
        | IEcologicalFootprintSection
        | IFaqSection
        | IGoElectricSection
        | IScrollSpyComponent
        | ISingleCenteredImageSection
        | ITabsSection
      )[]
    | undefined;

  /** Hide Header & Footer */
  hideHeaderFooter?: boolean | undefined;

  /** Secondary Logo */
  secondaryLogo?: Asset | undefined;

  /** Sticky CTA */
  stickyCta?: IStickyCta | undefined;
}

/** A static page. */

export interface IPage extends Entry<IPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'page';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IScrollSpyBlockFields {
  /** Title */
  title?: string | undefined;

  /** Show Title */
  showTitle?: boolean | undefined;

  /** Indent */
  indent: boolean;

  /** items */
  items?: IScrollSpyBlockItem[] | undefined;
}

export interface IScrollSpyBlock extends Entry<IScrollSpyBlockFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'scrollSpyBlock';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IScrollSpyBlockItemFields {
  /** Title */
  title?: string | undefined;

  /** ShowTitle */
  showTitle?: boolean | undefined;

  /** content */
  content: Document;
}

/** Items for a scrollspy block */

export interface IScrollSpyBlockItem extends Entry<IScrollSpyBlockItemFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'scrollSpyBlockItem';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IScrollSpyComponentFields {
  /** title */
  title?: string | undefined;

  /** Blocks */
  blocks?: IScrollSpyBlock[] | undefined;
}

/** Creates a component that has drag and drop child components with numbered sections and shows a sticky menu on the side with scroll functionality as well as the ability to minimize, maximise a section */

export interface IScrollSpyComponent extends Entry<IScrollSpyComponentFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'scrollSpyComponent';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ISingleCenteredImageSectionFields {
  /** Image */
  image: Asset;

  /** Text */
  text?: string | undefined;

  /** Background */
  background?: string | undefined;

  /** Padding */
  padding?: string | undefined;

  /** Link */
  link?: string | undefined;

  /** Section Name */
  sectionName?: string | undefined;

  /** MobileImage */
  mobileImage?: Asset | undefined;
}

export interface ISingleCenteredImageSection extends Entry<ISingleCenteredImageSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'singleCenteredImageSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IStickyCtaFields {
  /** Title */
  title?: string | undefined;

  /** Button */
  button: INavigationLink;

  /** Background Colour */
  backgroundColour?: string | undefined;
}

/** Config for mobile sticky cta. */

export interface IStickyCta extends Entry<IStickyCtaFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'stickyCta';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ITabFields {
  /** Title */
  title: string;

  /** URL Slug */
  urlSlug?: string | undefined;

  /** Description */
  description?: Document | undefined;

  /** Sections */
  sections?: (IColumnSection | ICustomSection | IFaqSection | ITabsSection)[] | undefined;
}

/** Single tab for Tabs section.  */

export interface ITab extends Entry<ITabFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'tab';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ITabsSectionFields {
  /** Title */
  title?: string | undefined;

  /** Type */
  type?: 'FAQs' | 'Other' | undefined;

  /** Tabs */
  tabs: ITab[];

  /** Padding */
  padding?: string | undefined;

  /** Inline Title */
  inlineTitle?: boolean | undefined;

  /** Show Urls */
  showUrls?: boolean | undefined;
}

/** Section with tabs. */

export interface ITabsSection extends Entry<ITabsSectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'tabsSection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ITestimonialFields {
  /** Quote */
  quote: string;

  /** Author */
  author: IAuthor;
}

/** "What members of Zoom EV community have to say about us" */

export interface ITestimonial extends Entry<ITestimonialFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'testimonial';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IThreeColumnImageFeatureFields {
  /** Title */
  title?: string | undefined;

  /** Image 1 */
  image1: Asset;

  /** Image 1 Link */
  image1Link?: string | undefined;

  /** Image 2 */
  image2: Asset;

  /** Image 2 Link */
  image2Link?: string | undefined;

  /** Image 3 */
  image3: Asset;

  /** Image 3 Link */
  image3Link?: string | undefined;

  /** CTA */
  cta?: INavigationLink | undefined;
}

export interface IThreeColumnImageFeature extends Entry<IThreeColumnImageFeatureFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'threeColumnImageFeature';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ITimelineItemFields {
  /** Title */
  title: string;

  /** No Title? */
  noTitle?: boolean | undefined;

  /** Description */
  description?: Document | undefined;
}

/** Single item on timeline. */

export interface ITimelineItem extends Entry<ITimelineItemFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'timelineItem';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export type CONTENT_TYPE =
  | 'author'
  | 'awardsTrustpilotSection'
  | 'banner'
  | 'benefit'
  | 'benefitChargerComparisonTable'
  | 'benefitChargerComparisonTableOption'
  | 'benefitContent3ColumnImagesWithText'
  | 'benefitFeature'
  | 'benefitGroup'
  | 'benefitGroupsSection'
  | 'benefitGroupTips'
  | 'benefitsSection'
  | 'benefitsSectionCategory'
  | 'benefitsSubsection'
  | 'benefitWorksWellWith'
  | 'blogPost'
  | 'blogPostTag'
  | 'bundleDiscountPriceCard'
  | 'calculatorSection'
  | 'callToActionSection'
  | 'card'
  | 'columnSection'
  | 'contactDetailsAndOpeningHours'
  | 'customSection'
  | 'ecologicalFootprintSection'
  | 'faq'
  | 'faqPage'
  | 'faqSection'
  | 'footerSection'
  | 'globalSettings'
  | 'goElectricSection'
  | 'instruction'
  | 'instructionsSection'
  | 'keyValueItem'
  | 'navigationLink'
  | 'page'
  | 'scrollSpyBlock'
  | 'scrollSpyBlockItem'
  | 'scrollSpyComponent'
  | 'singleCenteredImageSection'
  | 'stickyCta'
  | 'tab'
  | 'tabsSection'
  | 'testimonial'
  | 'threeColumnImageFeature'
  | 'timelineItem';

export type LOCALE_CODE = 'en-US';

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-US';
